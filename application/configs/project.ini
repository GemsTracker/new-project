[production]
name        = "New"
description = "New"

;---------------------------------------------------
; Hash encryption salt. REQUIRED!
;
; Use e.g. http://www.random.org/strings/ to create.
;
; Put %s somewhere within the salt to mix the value
; in the salt.
;---------------------------------------------------
salt = 

;----------------------------------------------------------
; The non database super user
;
; On production pwd should be empty or langer than 10 chars
;----------------------------------------------------------
admin.user = superadmin
admin.pwd  = superadmi
;admin.ipRanges =

css.gems        = gems/css/gems-fixed.css
css.print.url   = gems/css/gems_print.css
css.print.media = print
imagedir  = gems/images
css.local = "erasmusmc/css/erasmusmc.css"
favicon   = "erasmusmc/erasmusmc.ico"
jquerycss = "erasmusmc/css/jquery-mc.css"

contact.bugsUrl    = https://sourceforge.net/apps/trac/gemstracker/wiki
contact.supportUrl = https://sourceforge.net/projects/gemstracker/support
databaseFileEncoding = ISO-8859-1

;-------------------------------------------------------
; ACCOUNT SECTION
;
; delayFactor
;
; When a user enters a wrong password, each subsequent
; login attempt will be delayed by an exponentially
; increasing number of seconds.
;
; This delay is calculated as follows:
; delay = (number_failed_attempts ^ delayFactor)
;
;-------------------------------------------------------
account.delayFactor = 4

;-------------------------------------------------------
; SESSION SECTION
;
; idleTimeout
;
; Lifetime of the session (determines the expiration of
; the session namespace(s)).
; If not set, defaults to 1800 seconds = 30 minutes.
;
;-------------------------------------------------------

session.idleTimeout = 1800

;-------------------------------------------------------
; ASK THROTTLE SECTION
;
; Sets values that control the throttling (slowdowns to
; combat brute-force attacks) of the ask / token
; controller.
;
; askThrottle.period
;
; Look for failed token attempts in from now to
; X seconds ago.
;
; askThrottle.threshold
;
; If the number of failed token attempts exceeds this
; number, starting throttling.
;
; askThrottle.delay
;
; Throttle by delaying each request by X seconds.
;
;-------------------------------------------------------

askThrottle.period = 900
askThrottle.threshold = 300
askThrottle.delay = 10

;-------------------------------------------------------
; ASK DELAY SECTION
;
; askDelay
;
; When no askDelay is specified the user will see
; greeting screen were he or she will a have to click
; on a button to fill in a survey.
;
; With the askDelay is > 0 then greeting screen will
; be shown (with the button) but after the specified
; number of seconds the survey will load automatically.
;
; With an askDelay of 0 seconds the survey will load
; automatically.
;
; askNextDelay
;
; askNextDelay works the same but applies to the wait
; after the user completed a survey while another survey
; is available.
;-------------------------------------------------------

; askDelay = 10
; askNextDelay = 0

;-------------------------------------------------------
; E-MAIL SECTION
;
; USE
;
; Here you can set three global e-mail settings:
;
; bcc    = BCC every sent mail to this address.
; block  = Block any sending of mail.
; bounce = When set to 1 all mails are not sent to the
;          suplied TO address, but redirects them to
;          the FROM not respondent address. This allows
;          testing without altering respondent e-mail
;          addresses.
; site   = Supply a general site FROM address.
;-------------------------------------------------------

; email.bcc   =
email.block  = 0
email.bounce = 0
; email.site   =

;-------------------------------------------------------
; LAYOUT SECTION
;
; USE
;
; For each layout item with a value other than 0 there
; must exist a _layout{Item}() method in GemsEscort or
; the {Project}Escort.php class specified in
; {Project}Application.ini file.
;
; Items are loaded in the order specified below. Order
; may be important, e.g. navigation should be called
; before crumbs.
;
; INPUT
;
; This method is called with layoutPrepareArgs.{Item}
; in an array.
;
; Both layoutPrepare and layoutPrepareArgs can be
; changed at runtime before GemsEscort.postDispatch()
; is called.
;
; OUTPUT:
;
; The result (if any) is stored as a $view property.
; When the item value is a number, the name will be
; the item name.
; When the item value is a string, then it is stored
; in a MUtil_Html_Sequence view property with that
; string as name. The sequence is created on demand.
;-------------------------------------------------------

layoutPrepare.title                 = 1
layoutPrepare.projectName           = header
layoutPrepare.contact               = header_bar
layoutPrepare.localeSet             = header_bar
layoutPrepare.organizationSwitcher  = header_bar
layoutPrepare.version               = footer
layoutPrepare.user                  = footer
layoutPrepare.time                  = 0
layoutPrepare.navigation            = 1
layoutPrepare.crumbs                = main
layoutPrepare.messages              = main
layoutPrepare.css                   = 1
layoutPrepare.favicon               = 1
layoutPrepare.dojo                  = 0
layoutPrepare.jQuery                = 1

layoutPrepareArgs.contact.class   = rightFloat
layoutPrepareArgs.time.class      = rightFloat
layoutPrepareArgs.user.class      = rightFloat
layoutPrepareArgs.version.class   = leftFloat
layoutPrepareArgs.localeSet.class = leftFloat

;-------------------------------------------------------
; LOCALE SECTION
;
; Specify a default locale and locales for each of the
; supported languages.
;-------------------------------------------------------

locale.default = "en"
locales.en = "en"
locales.nl = "nl"

;----------------------------------------------------------------------
; PASSWORDS SECTION
;
; The last key must be a function name in your PasswordChecker class.
; That function must accept as parameters the array value and the
; password.
;
; In between keys can contain case insensitive organization codes, user
; roles and user definition names in any order and can overrule previous
; defined values.
; BEWARE keep keys in fixed array order:
;   passwords.staff.mgz.capsCount = 1
;   passwords.mgz.staff.lowerCount = 1
;   passwords.staff.mgz.lowerCount = 2
; will be processed as:
;   passwords.staff.mgz.capsCount = 1
;   passwords.staff.mgz.lowerCount = 2
;   passwords.mgz.staff.lowerCount = 1
;----------------------------------------------------------------------

passwords.notTheName = 1
passwords.guest.minLength = 6
passwords.staff.capsCount = 1
passwords.staff.lowerCount = 1
passwords.staff.minLength = 8
passwords.staff.numCount = 0
passwords.staff.notAlphaCount = 1
passwords.staff.notAlphaNumCount = 0

;-------------------------------------------------------
; TOKEN SECTION
;
; chars:  characters allowed in a token.
; format: format string to show to user for input of
;         token. The \ backslash is used as escape
;         character for characters that are fixed.
; from:   commonly mistaken input characters to correct.
; to:     characters to translate from characters to.
; case:   optional: 1|0. If the token should be
;         treated case sensitive. If missing the token
;         is case sensitive when chars contains
;         uppercase characters.
; reuse:  days tokens can be used:
;         -1 = not at all
;          0 = only today (default and required for looping)
;          1 = only up to yesterdays tokens
;-------------------------------------------------------

tokens.chars  = 23456789abcdefghijklmnopqrstuvwxyz
tokens.format = XXXX\-XXXX;
tokens.from   = 01;
tokens.to     = ol;

[testing : production]
admin.user = superadmin
admin.pwd  = superadmin

email.bounce = 1

[development : production]
admin.user = superadmin
admin.pwd  = superadmin

email.bounce = 1

passwords.staff.capsCount = 0
passwords.staff.lowerCount = 0
passwords.staff.minLength = 6
passwords.staff.numCount = 0
passwords.staff.notAlphaCount = 0
passwords.staff.notAlphaNumCount = 0
